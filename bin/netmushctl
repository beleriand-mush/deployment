#!/bin/bash
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [[ true != "$INIT_D_SCRIPT_SOURCED" ]] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          beleriand
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     3 4 5
# Default-Stop:      0 1 6
# Short-Description: Beleriand MUSH server
# Description:       Manages Beleriand MUSH daemon
### END INIT INFO

# Author: Duncan McGreggor <oubiwann@gmail.com>

DESC="Beleriand MUSH server"

MUSH_USER=bele
BASE_DIR=/home/$MUSH_USER/Beleriand
BIN_DIR=$BASE_DIR/bin
GAME_DIR=$BASE_DIR/game
RC_NAME=beleriand
DAEMON=$BIN_DIR/$RC_NAME
NAME="$NAME"
ACTION="$1"

export PATH=$BIND_DIR:$PATH

function success () {
    MODE=$1
    echo "$MODE: OK"
    exit 0
}

function failure () {
    MODE=$1
    echo "$MODE failed!"
    exit 127
}

function check-output () {
	OUTPUT="$1"
    CHECK1="$OUTPUT"
    CHECK2=`echo $OUTPUT|grep "onnected"`
    CHECK3=`echo $OUTPUT|grep "Welcome to Middle-earth"`
    if [[ -z "$CHECK1" ]] ; then
        echo
    elif [[ -z "$CHECK2" ]] ; then
        echo
    elif [[ -z "$CHECK3" ]] ; then
        echo
    else
        echo "RUNNING"
    fi
}

function daemon () {
    if [[ `whoami` = "$MUSH_USER" ]]; then
        cd $GAME_DIR && ./restart
    else
        su -l $MUSH_USER -c "$BIN_DIR/netmushctl start"
    fi
}

function do_start () {
    echo "Starting $NAME ..."
    daemon "$@" &> /dev/null && success "Startup" || failure "Startup"
}

function do_stop () {
    if [[ `whoami` = "$MUSH_USER" ]]; then
        OUTPUT="`$BIN_DIR/connect`"
    else
        OUTPUT=`su -l $MUSH_USER -c "$BIN_DIR/connect"`
    fi
    CHECKED=`check-output "$OUTPUT"`
    if [[ "$CHECKED" = "RUNNING" ]] ; then
        echo "Stopping $NAME ..."
        if [[ `whoami` = "$MUSH_USER" ]]; then
            $BIN_DIR/shutdown &> /dev/null
        else
            su -l $MUSH_USER -c "$BIN_DIR/netmushctl stop" &> /dev/null
        fi
    else
        echo "The $NAME is already stopped."
    fi
    success "Stop"
}

function do_restart () {
    if [[ `whoami` = "$MUSH_USER" ]]; then
        (stop) && \
        (sleep 1; start &> /dev/null) && success "Restart" || failure "Restart"
    else
        su -l $MUSH_USER -c "$BIN_DIR/netmushctl restart"
    fi
}


function do_status () {
    if [[ `whoami` = "$MUSH_USER" ]]; then
	    OUTPUT="`$BIN_DIR/connect`"
        CHECKED=`check-output "$OUTPUT"`
        if [[ "$CHECKED" = "RUNNING" ]] ; then
            success "Status"
        else
            failure "Status check"
        fi
    else
        su -l $MUSH_USER -c "$BIN_DIR/netmushctl status"
    fi
}

function install-rc () {
    ln -s $BIN_DIR/netmushctl /etc/init.d/$RC_NAME
    ln -s /etc/init.d/$RC_NAME /etc/rc3.d/S99${RC_NAME}
    ln -s /etc/init.d/$RC_NAME /etc/rc6.d/K01${RC_NAME}
}

case "$ACTION" in
    start)
	do_start
    ;;
    stop)
	do_stop
    ;;
    status)
    	do_status
    ;;
    restart)
	do_restart
    ;;
    setup)
    install-rc
    ;;
    *)
	RC=/etc/init.d/$RC_NAME
	echo "Usage: $RC {start|stop|status|restart}" >&2
	exit 127
    ;;
esac
